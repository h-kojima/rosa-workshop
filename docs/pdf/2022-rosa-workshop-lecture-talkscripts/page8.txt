The talk scripts of this page are as follows:

コンテナの特徴を説明するに至り、よく質問される
コンテナと仮想化の違いについて、ご紹介します。

いずれの技術においても、レイヤこそ異なりますが、
「集約効率の向上」という共通の効果があります。

ただし、それだけだとイメージがつきにくいようです。

その技術的なスタックに、各役割分担をイメージしてみると、
その違いが分かりやすいかと思います。

左側の仮想化については、ハイパーバイザー上に、
仮想マシン毎にゲストOSがインストールされ、

アプリケーション実行のためのライブラリーと、
アプリケーションのコードが積み上げられます。

この構造を見た時に、多くの場合、インフラ担当チームが、
OSのインストールとセットアップを行い、

アプリ担当チームに引き渡した上で、アプリ担当チームが開発したアプリを
配置しているのではないかと思います。

一方で、右側のコンテナ について見てみると、
アプリ毎に存在していた、OSというレイヤが無くなります。

つまり、もし、アプリ実行のOS整備までをインフラ担当チームの役割としていた場合、
アプリ環境の整備において、インフラチームの労力を減らすことが期待できます。

また、個々のOSが無くなるので、OSへのパッチ適用や設定変更なども、
アプリ毎に実施する必要が無くなります。

もし、環境整備やメンテナンスを、チーム間の申請ベースで、
ワークフローを実行している場合、

チーム間の計画の調整や設計のやり取りなどのため、実際の作業時間より、
時間を要しているケースが多いかと思いますが、

そうした時間の削減が期待できるようになります。
